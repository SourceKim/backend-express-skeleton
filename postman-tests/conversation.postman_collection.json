{
    "info": {
        "name": "AskBudda - Conversation",
        "description": "对话模块的 API 测试集合",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "获取会话列表",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                    }
                ],
                "url": {
                    "raw": "{{baseUrl}}/conversations",
                    "host": ["{{baseUrl}}"],
                    "path": ["conversations"]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test(\"获取会话列表成功状态码是 0\", function () {",
                            "    pm.response.to.have.status(200);",
                            "    const responseData = pm.response.json();",
                            "    pm.expect(responseData.code).to.equal(0);",
                            "    pm.expect(responseData.data).to.have.property('total');",
                            "    pm.expect(responseData.data).to.have.property('items');",
                            "    pm.expect(responseData.data.items).to.be.an('array');",
                            "",
                            "    if (responseData.data.items.length > 0) {",
                            "        const firstItem = responseData.data.items[0];",
                            "        pm.expect(firstItem).to.have.property('id');",
                            "        pm.expect(firstItem).to.have.property('title');",
                            "        pm.expect(firstItem).to.have.property('lastMessage');",
                            "        pm.expect(firstItem).to.have.property('created_at');",
                            "        pm.expect(firstItem).to.have.property('updated_at');",
                            "",
                            "        // 保存会话ID用于后续测试",
                            "        pm.environment.set('conversationId', firstItem.id);",
                            "    }",
                            "});"
                        ]
                    }
                }
            ]
        },
        {
            "name": "创建新会话",
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"content\": \"我最近很烦恼，请开导我\"\n}"
                },
                "url": {
                    "raw": "{{baseUrl}}/conversations/chats",
                    "host": ["{{baseUrl}}"],
                    "path": ["conversations", "chats"]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test(\"创建新会话成功状态码是 0\", function () {",
                            "    pm.response.to.have.status(200);",
                            "    const responseData = pm.response.json();",
                            "    pm.expect(responseData.code).to.equal(0);",
                            "    pm.expect(responseData.data).to.have.property('chatId');",
                            "    pm.expect(responseData.data).to.have.property('conversationId');",
                            "",
                            "    // 保存ID用于后续测试",
                            "    if (responseData.data.chatId) {",
                            "        pm.environment.set('chatId', responseData.data.chatId);",
                            "    }",
                            "    if (responseData.data.conversationId) {",
                            "        pm.environment.set('conversationId', responseData.data.conversationId);",
                            "    }",
                            "});"
                        ]
                    }
                }
            ]
        },
        {
            "name": "发送连续对话消息",
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                    },
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"content\": \"我的上个问题是什么?\",\n    \"conversationId\": \"{{conversationId}}\"\n}"
                },
                "url": {
                    "raw": "{{baseUrl}}/conversations/chats",
                    "host": ["{{baseUrl}}"],
                    "path": ["conversations", "chats"]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test(\"发送连续对话消息成功状态码是 0\", function () {",
                            "    pm.response.to.have.status(200);",
                            "    const responseData = pm.response.json();",
                            "    pm.expect(responseData.code).to.equal(0);",
                            "    pm.expect(responseData.data).to.have.property('chatId');",
                            "    pm.expect(responseData.data).to.have.property('conversationId');",
                            "    pm.expect(responseData.data.conversationId).to.equal(pm.environment.get('conversationId'));",
                            "",
                            "    // 更新 chatId",
                            "    if (responseData.data.chatId) {",
                            "        pm.environment.set('chatId', responseData.data.chatId);",
                            "    }",
                            "});"
                        ]
                    }
                }
            ]
        },
        {
            "name": "获取会话消息记录",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                    }
                ],
                "url": {
                    "raw": "{{baseUrl}}/conversations/{{conversationId}}/messages",
                    "host": ["{{baseUrl}}"],
                    "path": ["conversations", "{{conversationId}}", "messages"]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test(\"获取会话消息记录成功状态码是 0\", function () {",
                            "    pm.response.to.have.status(200);",
                            "    const responseData = pm.response.json();",
                            "    pm.expect(responseData.code).to.equal(0);",
                            "    pm.expect(responseData.data).to.have.property('total');",
                            "    pm.expect(responseData.data).to.have.property('list');",
                            "    pm.expect(responseData.data.list).to.be.an('array');",
                            "    pm.expect(responseData.data).to.have.property('page');",
                            "    pm.expect(responseData.data).to.have.property('limit');",
                            "",
                            "    if (responseData.data.list.length > 0) {",
                            "        const firstItem = responseData.data.list[0];",
                            "        pm.expect(firstItem).to.have.property('id');",
                            "        pm.expect(firstItem).to.have.property('role');",
                            "        pm.expect(firstItem).to.have.property('content');",
                            "        pm.expect(firstItem).to.have.property('created_at');",
                            "        pm.expect(firstItem).to.have.property('updated_at');",
                            "",
                            "        // 保存会话ID用于后续测试",
                            "        pm.environment.set('conversationId', firstItem.id);",
                            "    }",
                            "});"
                        ]
                    }
                }
            ]
        },
        {
            "name": "获取对话状态",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                    }
                ],
                "url": {
                    "raw": "{{baseUrl}}/conversations/{{conversationId}}/chats/{{chatId}}/status",
                    "host": ["{{baseUrl}}"],
                    "path": ["conversations", "{{conversationId}}", "chats", "{{chatId}}", "status"]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test(\"获取对话状态成功状态码是 0\", function () {",
                            "    pm.response.to.have.status(200);",
                            "    const responseData = pm.response.json();",
                            "    pm.expect(responseData.code).to.equal(0);",
                            "    pm.expect(responseData.data).to.have.property('status');",
                            "    pm.expect(responseData.data.status).to.be.oneOf(['pending', 'completed', 'failed']);",
                            "    ",
                            "    if (responseData.data.status === 'failed') {",
                            "        pm.expect(responseData.data).to.have.property('error');",
                            "    }",
                            "});"
                        ]
                    }
                }
            ]
        },
        {
            "name": "获取对话内容",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                    }
                ],
                "url": {
                    "raw": "{{baseUrl}}/conversations/{{conversationId}}/chats/{{chatId}}",
                    "host": ["{{baseUrl}}"],
                    "path": ["conversations", "{{conversationId}}", "chats", "{{chatId}}"]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test(\"获取对话内容成功状态码是 0\", function () {",
                            "    pm.response.to.have.status(200);",
                            "    const responseData = pm.response.json();",
                            "    pm.expect(responseData.code).to.equal(0);",
                            "    pm.expect(responseData.data).to.have.property('id');",
                            "    pm.expect(responseData.data).to.have.property('content');",
                            "    pm.expect(responseData.data).to.have.property('created_at');",
                            "});"
                        ]
                    }
                }
            ]
        },
        {
            "name": "获取历史消息",
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Authorization",
                        "value": "Bearer {{token}}"
                    }
                ],
                "url": {
                    "raw": "{{baseUrl}}/conversations/{{conversationId}}/history?order=ASC",
                    "host": ["{{baseUrl}}"],
                    "path": ["conversations", "{{conversationId}}", "history"],
                    "query": [
                        {
                            "key": "order",
                            "value": "ASC"
                        }
                    ]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test(\"获取历史消息成功状态码是 0\", function () {",
                            "    pm.response.to.have.status(200);",
                            "    const responseData = pm.response.json();",
                            "    pm.expect(responseData.code).to.equal(0);",
                            "    pm.expect(responseData.data).to.have.property('total');",
                            "    pm.expect(responseData.data).to.have.property('list');",
                            "    pm.expect(responseData.data.list).to.be.an('array');",
                            "    pm.expect(responseData.data).to.have.property('page');",
                            "    pm.expect(responseData.data).to.have.property('limit');",
                            "",
                            "    if (responseData.data.list.length > 0) {",
                            "        const firstItem = responseData.data.list[0];",
                            "        pm.expect(firstItem).to.have.property('id');",
                            "        pm.expect(firstItem).to.have.property('role');",
                            "        pm.expect(firstItem).to.have.property('content');",
                            "        pm.expect(firstItem).to.have.property('created_at');",
                            "        pm.expect(firstItem.role).to.be.oneOf(['user', 'assistant']);",
                            "    }",
                            "});"
                        ]
                    }
                }
            ]
        },
        {
            "name": "错误处理测试",
            "item": [
                {
                    "name": "无效的会话ID",
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{token}}"
                            }
                        ],
                        "url": {
                            "raw": "{{baseUrl}}/conversations/invalid-id/history",
                            "host": ["{{baseUrl}}"],
                            "path": ["conversations", "invalid-id", "history"]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"应返回404错误\", function () {",
                                    "    pm.response.to.have.status(404);",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('message');",
                                    "});"
                                ]
                            }
                        }
                    ]
                },
                {
                    "name": "未认证访问",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/conversations",
                            "host": ["{{baseUrl}}"],
                            "path": ["conversations"]
                        }
                    },
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "pm.test(\"应返回401错误\", function () {",
                                    "    pm.response.to.have.status(401);",
                                    "    const response = pm.response.json();",
                                    "    pm.expect(response).to.have.property('message');",
                                    "});"
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    ]
} 